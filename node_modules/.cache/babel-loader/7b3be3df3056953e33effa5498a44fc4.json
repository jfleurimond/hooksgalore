{"ast":null,"code":"var _jsxFileName = \"/Users/justin/Desktop/dev/react/codeSnippets/hooksgalore/src/todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ToDo(props) {\n  _s();\n\n  const [currentTodo, updateList] = useState({\n    newItem: \"\",\n    list: []\n  });\n\n  const updateCurrentList = e => {\n    e.preventDefault();\n    updateList([...currentTodo, currentTodo]);\n  };\n\n  const decreaseCount = () => {\n    if (currentTodo != 0) {\n      updateList(currentTodo);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"welcome to your todo app\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"formInput\",\n        type: \"text\",\n        placeholder: \"Enter your todo Item\",\n        onChange: e => updateList(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: updateCurrentList,\n        children: \" Submit \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" Tests with the current state \", currentTodo.newItem, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ToDo, \"QM+WNHgi/vULYtFaaXBRXYhhzPQ=\");\n\n_c = ToDo;\nexport default ToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"sources":["/Users/justin/Desktop/dev/react/codeSnippets/hooksgalore/src/todo.js"],"names":["React","useState","useEffect","ToDo","props","currentTodo","updateList","newItem","list","updateCurrentList","e","preventDefault","decreaseCount","console","log","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;AAIA,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAAA;;AAChB,QAAM,CAACC,WAAD,EAAcC,UAAd,IAA4BL,QAAQ,CAAC;AAACM,IAAAA,OAAO,EAAC,EAAT;AAAaC,IAAAA,IAAI,EAAC;AAAlB,GAAD,CAA1C;;AAEA,QAAMC,iBAAiB,GAAIC,CAAD,IAAO;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,UAAU,CAAC,CAAC,GAAGD,WAAJ,EAAiBA,WAAjB,CAAD,CAAV;AACH,GAHD;;AAIA,QAAMO,aAAa,GAAG,MAAM;AACxB,QAAGP,WAAW,IAAI,CAAlB,EAAqB;AACjBC,MAAAA,UAAU,CAAED,WAAF,CAAV;AACH;AAEJ,GALD;;AAOAH,EAAAA,SAAS,CAAC,MAAK;AACXW,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,sBAEI;AAAK,IAAA,SAAS,EAAE,WAAhB;AAAA,4BACA;AAAA,8BACA;AAAO,QAAA,SAAS,EAAC,WAAjB;AAA6B,QAAA,IAAI,EAAC,MAAlC;AAAyC,QAAA,WAAW,EAAC,sBAArD;AACC,QAAA,QAAQ,EAAEJ,CAAC,IAAIJ,UAAU,CAACI,CAAC,CAACK,MAAF,CAASC,KAAV;AAD1B;AAAA;AAAA;AAAA;AAAA,cADA,eAGA;AAAQ,QAAA,OAAO,EAAEP,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAOA;AAAA,mDAAmCJ,WAAW,CAACE,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,YAPA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAcH;;GAhCQJ,I;;KAAAA,I;AAmCT,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react'; \n\n\n\nfunction ToDo(props){\n    const [currentTodo, updateList] = useState({newItem:\"\", list:[]});\n\n    const updateCurrentList = (e) => {\n        e.preventDefault(); \n        updateList([...currentTodo, currentTodo]); \n    }\n    const decreaseCount = () => {\n        if(currentTodo != 0) {\n            updateList( currentTodo); \n        }\n        \n    }\n\n    useEffect(()=> {\n        console.log(\"welcome to your todo app\")\n    }, []);\n\n    return(\n\n        <div className =\"container\">\n        <form> \n        <input className=\"formInput\" type=\"text\" placeholder=\"Enter your todo Item\"\n         onChange={e => updateList(e.target.value)} />\n        <button onClick={updateCurrentList} > Submit </button>\n        </form> \n\n        <h1> Tests with the current state {currentTodo.newItem} </h1>\n        \n        </div>\n    ); \n\n}\n\n\nexport default ToDo; "]},"metadata":{},"sourceType":"module"}