{"ast":null,"code":"var _jsxFileName = \"/Users/justin/Desktop/dev/react/codeSnippets/hooksgalore/src/todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ToDo(props) {\n  _s();\n\n  const [count, setCount] = useState(0);\n\n  const updateCount = () => {\n    setCount(count + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" Test with the current state \", count, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: updateCount,\n      children: \"Update State \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ToDo, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n\n_c = ToDo;\nexport default ToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"sources":["/Users/justin/Desktop/dev/react/codeSnippets/hooksgalore/src/todo.js"],"names":["React","useState","ToDo","props","count","setCount","updateCount"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAIA,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAD,CAAlC;;AAEA,QAAMK,WAAW,GAAG,MAAM;AACtBD,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH,GAFD;;AAIA,sBACI;AAAA,4BACA;AAAA,kDAAkCA,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAQ,MAAA,OAAO,EAAEE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAdQJ,I;;KAAAA,I;AAiBT,eAAeA,IAAf","sourcesContent":["import React, {useState} from 'react'; \n\n\n\nfunction ToDo(props){\n    const [count, setCount] = useState(0);\n\n    const updateCount = () => {\n        setCount(count + 1); \n    }\n\n    return(\n        <div>\n        <h1> Test with the current state {count} </h1>\n        <button onClick={updateCount} >Update State </button>\n        </div>\n    ); \n\n}\n\n\nexport default ToDo; "]},"metadata":{},"sourceType":"module"}