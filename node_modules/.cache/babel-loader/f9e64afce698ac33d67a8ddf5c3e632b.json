{"ast":null,"code":"var _jsxFileName = \"/Users/justin/Desktop/dev/react/codeSnippets/hooksgalore/src/todos.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Todo from './todo';\nimport Form from './form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ToDos() {\n  _s();\n\n  const [currentTodo, updateTodo] = useState([{\n    id: 1,\n    Task: \"Clean Room\",\n    completed: false\n  }, {\n    id: 2,\n    Task: \"Take out Trash\",\n    completed: false\n  }]);\n\n  const handleToggle = () => {\n    console.log(\"Togggle test\");\n  };\n\n  const deleteTask = () => {\n    console.log(\"deleting task test\");\n  };\n\n  const addTask = userInput => {\n    let copy = [...currentTodo];\n    copy = [...copy, {\n      id: Math.floor(Math.random() * 1000),\n      Task: userInput,\n      completed: false\n    }];\n    updateTodo(copy);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainContainer\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Main Test \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), currentTodo.map(tasks => {\n      return /*#__PURE__*/_jsxDEV(Todo, {\n        todos: tasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ToDos, \"Q/w5IYgjcfHgmr8KnCFPxmLNGN0=\");\n\n_c = ToDos;\nexport default ToDos;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDos\");","map":{"version":3,"sources":["/Users/justin/Desktop/dev/react/codeSnippets/hooksgalore/src/todos.js"],"names":["React","useState","Todo","Form","ToDos","currentTodo","updateTodo","id","Task","completed","handleToggle","console","log","deleteTask","addTask","userInput","copy","Math","floor","random","map","tasks"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAGA,SAASC,KAAT,GAAgB;AAAA;;AAEhB,QAAM,CAACC,WAAD,EAAcC,UAAd,IAA4BL,QAAQ,CAAC,CAC3C;AACIM,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,YAFV;AAGIC,IAAAA,SAAS,EAAE;AAHf,GAD2C,EAO3C;AACIF,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,gBAFV;AAGIC,IAAAA,SAAS,EAAE;AAHf,GAP2C,CAAD,CAA1C;;AAgBA,QAAMC,YAAY,GAAE,MAAK;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACrBF,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACH,GAFD;;AAIA,QAAME,OAAO,GAAIC,SAAD,IAAe;AAC3B,QAAIC,IAAI,GAAG,CAAC,GAAGX,WAAJ,CAAX;AACAW,IAAAA,IAAI,GAAG,CAAC,GAAGA,IAAJ,EAAU;AAACT,MAAAA,EAAE,EAAEU,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CAAL;AAAuCX,MAAAA,IAAI,EAAEO,SAA7C;AAAwDN,MAAAA,SAAS,EAAE;AAAnE,KAAV,CAAP;AACAH,IAAAA,UAAU,CAACU,IAAD,CAAV;AACH,GAJD;;AAMI,sBAEI;AAAK,IAAA,SAAS,EAAG,eAAjB;AAAA,iCAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAlC,eAEI,QAAC,IAAD;AAAM,MAAA,OAAO,EAAIF;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFJ,EAIKT,WAAW,CAACe,GAAZ,CAAiBC,KAAD,IAAW;AACxB,0BACI,QAAC,IAAD;AAAM,QAAA,KAAK,EAAIA;AAAf;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJA,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAkBK;;GAlDAjB,K;;KAAAA,K;AAuDT,eAAeA,KAAf","sourcesContent":["import React, {useState} from 'react'; \nimport Todo from './todo';\nimport Form from './form';\n\n\nfunction ToDos(){\n    \nconst [currentTodo, updateTodo] = useState([\n{\n    id: 1,\n    Task: \"Clean Room\",\n    completed: false\n}, \n\n{\n    id: 2,\n    Task: \"Take out Trash\",\n    completed: false\n}\n\n\n]); \n\nconst handleToggle =() =>{\n    console.log(\"Togggle test\");\n}\n\nconst deleteTask = () => {\n    console.log(\"deleting task test\");\n}\n\nconst addTask = (userInput) => {\n    let copy = [...currentTodo];\n    copy = [...copy, {id: Math.floor(Math.random() * 1000), Task: userInput, completed: false}]\n    updateTodo(copy); \n}\n\n    return(\n\n        <div className = \"mainContainer\"> <h1>Main Test </h1>\n\n            <Form addTask = {addTask}/> \n        \n            {currentTodo.map((tasks) => {\n                return(\n                    <Todo todos = {tasks} />\n                )\n            }\n\n            )}\n        \n               \n            \n        </div>\n\n       )}\n        \n    \n\n\nexport default ToDos; "]},"metadata":{},"sourceType":"module"}